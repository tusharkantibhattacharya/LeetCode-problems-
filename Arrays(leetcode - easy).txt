1.Two sum[easy]

import java.util.HashMap;
class Solution{
public int[] twoSum(int[] nums,in target){
Map<Integer,Integer> map=new HashMap<>();
int n=nums.length;
//create Hashtable.
for(int i=0;i<n;i++){
 	map.put(nums[i],i);
}
//find complement
	for(int i=0;i<n;i++){
	int complement=target-nums[i];
	if(map.containsKey(complement) && map.get(complement)!=i)
	return new int[]{i,map.get(complement)};
}}
   return new int[]{};
}}


26.Remove Duplicates from Sorted Array
class Solution {
    public int removeDuplicates(int[] nums) {
        int j = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] != nums[i - 1]) {
                nums[j] = nums[i];
                j++;
            }
        }
        return j;
    }
}


27. Remove Element
class Solution {
    public int removeElement(int[] nums, int val) {
        int index = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != val) {
                nums[index] = nums[i];
                index++;
            }
        }
        return index;
    }
}
35. Search Insert Position
class Solution {
    public int searchInsert(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] > target) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }

        return left;        
    }
}
66. Plus One
class Solution {
    public int[] plusOne(int[] digits) {
        for (int i = digits.length - 1; i >= 0; i--) {
            if (digits[i] + 1 != 10) {
                digits[i] += 1;
                return digits;
            }
            digits[i] = 0;
        }
        
        int[] newDigits = new int[digits.length + 1];
        newDigits[0] = 1;
        return newDigits;        
    }
}
